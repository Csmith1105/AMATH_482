%% Filtering Ultrasound Data to Locate an Object

clear all; close all; clc;

load Testdata;

L = 15; % determines spatial domain
t = 20;  % number of data samples
n = 64; % Fourier modes, i.e. # of points in spatial range (2^6)

% 1x65 vector, includes upper & lower bounds of spatial range [-15,15]
x2 = linspace(-L,L,n+1); 

% coordinates of each point in the discretized spatial range [-15,15)
x = x2(1:n);
y = x;  
z = x; 

% grid with spatial coordinates
[X,Y,Z] = meshgrid(x,y,z);

% vector representing frequency domain
% scaled by 2pi/30
k= (2*pi/(2*L))*[0:(n/2-1) -n/2:-1];

% shifts the halves of the vector so that
% values go from lowest to highest
% this is useful for visualizing plots
ks=fftshift(k);

% grid with frequency values with a min value at origin
[Kx,Ky,Kz] = meshgrid(ks,ks,ks);

%% 1
% Through averaging of the spectrum, determine the frequency signature 
%(center frequency) generated by the marble.

Un = zeros(n,n,n,t);  % for storing the reshaped original Un data
Un_fft = zeros(n,n,n,t); % for storing the transformed data
sum_fft = zeros(n,n,n); % for storing the cumulative sum of values of transformed data

for j=1:t 
   % Creates a 3D grid for each observation in Undata
    Un(:,:,:,j) = reshape(Undata(j,:),n,n,n); % stores the grid data 
  
    % transform the grid data to the frequency domain and shift
    Un_fft(:,:,:,j) = fftshift(fftn(Un(:,:,:,j)));

   % cumulative sum of signal values at each point in the grid
    sum_fft = sum_fft + Un_fft(:,:,:,j);
end

% compute the mean signal strength for each point in the array
mean_fft = abs(sum_fft(:,:,:))./t;  

% returns the linear index corresponding to the max value in mean_fft
[max_signal, max_idx] = max(mean_fft(:));

% converts the linear index to corresponding x, y, z indices
[max_x, max_y, max_z] = ind2sub(size(mean_fft), max_idx);

% using the max coordinates, find frequencies associated with max signal
kx_center = Kx(max_x, max_y, max_z); 
ky_center = Ky(max_x, max_y, max_z); 
kz_center = Kz(max_x, max_y, max_z); 

%% 2
% Filter the data around the center frequency determined above in 
% order to denoise the data and determine the path of the marble. 

tau = 0.3;

filter = exp(-tau*((Kx(:,:,:) - kx_center).^2 ... 
    + (Ky(:,:,:) - ky_center).^2 ... 
    + (Kz(:,:,:) - kz_center).^2)); 

Un_fft_filtered = zeros(n,n,n,t);

% for each sample, multiply the fiter grid by data grid 
for j=1:5
   Un_fft_filtered(:,:,:,j) = filter.*Un_fft(:,:,:,j);
   % plot the signal data in the frequency domain
%    close all, isosurface(Kx,Ky,Kz,abs(Un_fft_filtered(:,:,:,j)),0.015)
%    xlabel('Frequency x'); ylabel('Frequency y'); zlabel('Frequency z')
%    title("Isoplot in Frequency Domain, t = 1, Signal Value = 0.015", 'Fontsize',18)
%    axis([-10 10 -10 10 -10 10]), grid on, drawnow
%    pause(7)
end

Un_filtered = zeros(n,n,n,t);  % stores filter data (spatial domain)
spatial_coord = zeros(t, 3) % stores the spatial coordinates for trajectory plot

% Inverse FFT on the filtered f-domain data and then plot in spatial domain

for j=1:t
    % transform filtered data to spatial domain
    Un_filtered(:,:,:,j) = ifftn(ifftshift(Un_fft_filtered(:,:,:,j)));

    % get max signal in the spatial domain
    Un_filtered_3x3 = abs(Un_filtered(:,:,:,j));
    [max_signal_spatial, max_idx_spatial] = max(Un_filtered_3x3(:));
   
    % x, y, z indices of the DATA
    [max_x_data, max_y_data, max_z_data] = ind2sub(size(Un_filtered_3x3), max_idx_spatial);
    
    % spatial coordinates
    x_coord = X(max_x_data, max_y_data, max_z_data); 
    y_coord = Y(max_x_data, max_y_data, max_z_data); 
    z_coord = Z(max_x_data, max_y_data, max_z_data); 
     
    spatial_coord(j,:) = [x_coord y_coord z_coord];
    
   % plot the signal data in the spatial domain
%    close all, isosurface(X,Y,Z,abs(Un_filtered(:,:,:,j)),0.4)
%    xlabel('Spatial x')
%    ylabel('Spatial y')
%    zlabel('Spatial z')
%    title("Isoplot in Spatial Domain, t = 1, Signal Value = 0.4", 'Fontsize',18)
%    axis([-2 8 -10 0 3 13]), grid on, drawnow
%    pause(2)
end

close all
plot3(spatial_coord(:,1), spatial_coord(:,2), spatial_coord(:,3), '-o','Color','b','MarkerSize',10)
title('Trajectory of Object in 3-D Space', 'Fontsize',18)
xlabel('x', 'fontweight','bold','fontsize',12);
ylabel('y', 'fontweight','bold','fontsize',12);
zlabel('z', 'fontweight','bold','fontsize',12, 'Rotation', pi/2);


%% 3
% Where should an intense acoustic wave be focused 
% to breakup the marble at the 20th data measurement?

% (-5.6250, 4.2188, -6.0938)
final_coordinates = spatial_coord(20,:);
